<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.mapper.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.study.bean.Customer" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="customer_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_sign" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="mobile" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="create_data" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, customer_name, is_sign, mobile, type, create_data
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.study.bean.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.study.bean.Customer" >
    insert into customer (id, code, customer_name, 
      is_sign, mobile, type, 
      create_data)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{isSign,jdbcType=TINYINT}, #{mobile,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{createData,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.study.bean.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="customerName != null" >
        customer_name,
      </if>
      <if test="isSign != null" >
        is_sign,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createData != null" >
        create_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="isSign != null" >
        #{isSign,jdbcType=TINYINT},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createData != null" >
        #{createData,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.bean.Customer" >
    update customer
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="isSign != null" >
        is_sign = #{isSign,jdbcType=TINYINT},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createData != null" >
        create_data = #{createData,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.bean.Customer" >
    update customer
    set code = #{code,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      is_sign = #{isSign,jdbcType=TINYINT},
      mobile = #{mobile,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      create_data = #{createData,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>